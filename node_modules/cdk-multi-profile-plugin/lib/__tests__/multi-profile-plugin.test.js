"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const multi_profile_plugin_1 = require("../multi-profile-plugin");
const host = {
    credentialProviderSources: [],
    load: jest.fn(),
    registerCredentialProviderSource: jest.fn(),
};
beforeEach(() => {
    jest.resetAllMocks();
});
it('should register the credential provider source', async () => {
    const plugin = new multi_profile_plugin_1.MultiProfilePlugin({ profile: '123' }, 'filename');
    plugin.init(host);
    expect(host.registerCredentialProviderSource).toHaveBeenCalledTimes(1);
});
it('should not register the credential provider source', async () => {
    const plugin = new multi_profile_plugin_1.MultiProfilePlugin({ profile: '123' }, 'filename');
    process.env.IGNORE_CDK_MULTI_PROFILE_PLUGIN = 'true';
    plugin.init(host);
    expect(host.registerCredentialProviderSource).toHaveBeenCalledTimes(0);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktcHJvZmlsZS1wbHVnaW4udGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9fX3Rlc3RzX18vbXVsdGktcHJvZmlsZS1wbHVnaW4udGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGtFQUE2RDtBQUc3RCxNQUFNLElBQUksR0FBZTtJQUN2Qix5QkFBeUIsRUFBRSxFQUFFO0lBQzdCLElBQUksRUFBRSxJQUFJLENBQUMsRUFBRSxFQUFFO0lBQ2YsZ0NBQWdDLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRTtDQUM1QyxDQUFDO0FBRUYsVUFBVSxDQUFDLEdBQUcsRUFBRTtJQUNkLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUN2QixDQUFDLENBQUMsQ0FBQztBQUVILEVBQUUsQ0FBQyxnREFBZ0QsRUFBRSxLQUFLLElBQUksRUFBRTtJQUM5RCxNQUFNLE1BQU0sR0FBRyxJQUFJLHlDQUFrQixDQUFDLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBRXRFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFbEIsTUFBTSxDQUFDLElBQUksQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pFLENBQUMsQ0FBQyxDQUFDO0FBRUgsRUFBRSxDQUFDLG9EQUFvRCxFQUFFLEtBQUssSUFBSSxFQUFFO0lBQ2xFLE1BQU0sTUFBTSxHQUFHLElBQUkseUNBQWtCLENBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEVBQUUsVUFBVSxDQUFDLENBQUM7SUFFdEUsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBK0IsR0FBRyxNQUFNLENBQUM7SUFFckQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVsQixNQUFNLENBQUMsSUFBSSxDQUFDLGdDQUFnQyxDQUFDLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDekUsQ0FBQyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNdWx0aVByb2ZpbGVQbHVnaW4gfSBmcm9tICcuLi9tdWx0aS1wcm9maWxlLXBsdWdpbic7XG5pbXBvcnQgeyBQbHVnaW5Ib3N0IH0gZnJvbSAnYXdzLWNkayc7XG5cbmNvbnN0IGhvc3Q6IFBsdWdpbkhvc3QgPSB7XG4gIGNyZWRlbnRpYWxQcm92aWRlclNvdXJjZXM6IFtdLFxuICBsb2FkOiBqZXN0LmZuKCksXG4gIHJlZ2lzdGVyQ3JlZGVudGlhbFByb3ZpZGVyU291cmNlOiBqZXN0LmZuKCksXG59O1xuXG5iZWZvcmVFYWNoKCgpID0+IHtcbiAgamVzdC5yZXNldEFsbE1vY2tzKCk7XG59KTtcblxuaXQoJ3Nob3VsZCByZWdpc3RlciB0aGUgY3JlZGVudGlhbCBwcm92aWRlciBzb3VyY2UnLCBhc3luYyAoKSA9PiB7XG4gIGNvbnN0IHBsdWdpbiA9IG5ldyBNdWx0aVByb2ZpbGVQbHVnaW4oeyBwcm9maWxlOiAnMTIzJyB9LCAnZmlsZW5hbWUnKTtcblxuICBwbHVnaW4uaW5pdChob3N0KTtcblxuICBleHBlY3QoaG9zdC5yZWdpc3RlckNyZWRlbnRpYWxQcm92aWRlclNvdXJjZSkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xufSk7XG5cbml0KCdzaG91bGQgbm90IHJlZ2lzdGVyIHRoZSBjcmVkZW50aWFsIHByb3ZpZGVyIHNvdXJjZScsIGFzeW5jICgpID0+IHtcbiAgY29uc3QgcGx1Z2luID0gbmV3IE11bHRpUHJvZmlsZVBsdWdpbih7IHByb2ZpbGU6ICcxMjMnIH0sICdmaWxlbmFtZScpO1xuXG4gIHByb2Nlc3MuZW52LklHTk9SRV9DREtfTVVMVElfUFJPRklMRV9QTFVHSU4gPSAndHJ1ZSc7XG5cbiAgcGx1Z2luLmluaXQoaG9zdCk7XG5cbiAgZXhwZWN0KGhvc3QucmVnaXN0ZXJDcmVkZW50aWFsUHJvdmlkZXJTb3VyY2UpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygwKTtcbn0pO1xuIl19