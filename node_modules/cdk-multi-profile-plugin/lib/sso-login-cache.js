"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SSOLoginCache = void 0;
const fs = __importStar(require("fs-extra"));
const path = __importStar(require("path"));
class SSOLoginCache {
    constructor(ssoCachePath) {
        try {
            this.files = fs
                .readdirSync(ssoCachePath)
                .map((file) => path.join(ssoCachePath, file));
        }
        catch (e) {
            this.files = [];
        }
    }
    getCachedLogin(ssoProfile) {
        for (const file of this.files) {
            const json = fs.readJSONSync(file);
            if ((json === null || json === void 0 ? void 0 : json.startUrl) === ssoProfile.sso_start_url &&
                (json === null || json === void 0 ? void 0 : json.region) === ssoProfile.sso_region) {
                return {
                    accessToken: json.accessToken,
                };
            }
        }
        throw new Error('Current cached SSO login is expired or invalid');
    }
}
exports.SSOLoginCache = SSOLoginCache;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3NvLWxvZ2luLWNhY2hlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3Nzby1sb2dpbi1jYWNoZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsNkNBQStCO0FBQy9CLDJDQUE2QjtBQUU3QixNQUFhLGFBQWE7SUFHeEIsWUFBWSxZQUFvQjtRQUM5QixJQUFJO1lBQ0YsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFO2lCQUNaLFdBQVcsQ0FBQyxZQUFZLENBQUM7aUJBQ3pCLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztTQUNqRDtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7U0FDakI7SUFDSCxDQUFDO0lBRU0sY0FBYyxDQUNuQixVQUFrQztRQUVsQyxLQUFLLE1BQU0sSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDN0IsTUFBTSxJQUFJLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNuQyxJQUNFLENBQUEsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLFFBQVEsTUFBSyxVQUFVLENBQUMsYUFBYTtnQkFDM0MsQ0FBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsTUFBTSxNQUFLLFVBQVUsQ0FBQyxVQUFVLEVBQ3RDO2dCQUNBLE9BQU87b0JBQ0wsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXO2lCQUM5QixDQUFDO2FBQ0g7U0FDRjtRQUVELE1BQU0sSUFBSSxLQUFLLENBQUMsZ0RBQWdELENBQUMsQ0FBQztJQUNwRSxDQUFDO0NBQ0Y7QUE5QkQsc0NBOEJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMtZXh0cmEnO1xuaW1wb3J0ICogYXMgcGF0aCBmcm9tICdwYXRoJztcblxuZXhwb3J0IGNsYXNzIFNTT0xvZ2luQ2FjaGUge1xuICBwcml2YXRlIGZpbGVzOiBzdHJpbmdbXTtcblxuICBjb25zdHJ1Y3Rvcihzc29DYWNoZVBhdGg6IHN0cmluZykge1xuICAgIHRyeSB7XG4gICAgICB0aGlzLmZpbGVzID0gZnNcbiAgICAgICAgLnJlYWRkaXJTeW5jKHNzb0NhY2hlUGF0aClcbiAgICAgICAgLm1hcCgoZmlsZSkgPT4gcGF0aC5qb2luKHNzb0NhY2hlUGF0aCwgZmlsZSkpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRoaXMuZmlsZXMgPSBbXTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgZ2V0Q2FjaGVkTG9naW4oXG4gICAgc3NvUHJvZmlsZTogUmVjb3JkPHN0cmluZywgc3RyaW5nPixcbiAgKTogeyBhY2Nlc3NUb2tlbjogc3RyaW5nIH0ge1xuICAgIGZvciAoY29uc3QgZmlsZSBvZiB0aGlzLmZpbGVzKSB7XG4gICAgICBjb25zdCBqc29uID0gZnMucmVhZEpTT05TeW5jKGZpbGUpO1xuICAgICAgaWYgKFxuICAgICAgICBqc29uPy5zdGFydFVybCA9PT0gc3NvUHJvZmlsZS5zc29fc3RhcnRfdXJsICYmXG4gICAgICAgIGpzb24/LnJlZ2lvbiA9PT0gc3NvUHJvZmlsZS5zc29fcmVnaW9uXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBhY2Nlc3NUb2tlbjoganNvbi5hY2Nlc3NUb2tlbixcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0N1cnJlbnQgY2FjaGVkIFNTTyBsb2dpbiBpcyBleHBpcmVkIG9yIGludmFsaWQnKTtcbiAgfVxufVxuIl19